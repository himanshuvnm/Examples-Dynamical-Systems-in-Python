#Page 91; Problem-2, determination of Phase Potraits
import matplotlib.pyplot as plt
import numpy as np
from scipy.integrate import odeint
import pylab as pl

# 2D system
def dx_dt(x,t):
  return [0, x[0]+2*x[1]]

# trajectories
ts=np.linspace(0,10,500)
ic=np.linspace(-3,3,6)

for r in ic:
  for s in ic:
    x0=[r,s]
    xs=odeint(dx_dt,x0,ts)
    plt.plot(xs[:,0],xs[:,1],"r-")

# backward trajectories
ts=np.linspace(0,-10,500)
ic=np.linspace(-3,3,6)
for r in ic:
  for s in ic:
    x0=[r,s]
    xs=odeint(dx_dt,x0,ts)
    plt.plot(xs[:,0],xs[:,1],"r-")

#label the axes and everything esle
plt.xlabel("x",fontsize=15)
plt.ylabel("y",fontsize=15)
plt.tick_params(labelsize=15)
plt.xlim(-3,3)
plt.ylim(-3,3)

#vectorfield

X,Y=np.mgrid[-3:3:20j,-3:3:30j]
u=0
v=X+2*Y
pl.quiver(X,Y,u,v,color='b')
plt.show()
